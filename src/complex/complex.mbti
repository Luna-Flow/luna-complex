package KCN-judu/calculus-numerical/complex

// Values

// Types and methods
pub(all) struct Complex {
  re : Double
  im : Double
}
impl Complex {
  abs(Self) -> Double
  abs_log(Self) -> Double
  abs_sqr(Self) -> Double
  add(Self, Self) -> Unit
  add_imag(Self, Double) -> Self
  add_imag_inplace(Self, Double) -> Unit
  add_real(Self, Double) -> Self
  add_real_inplace(Self, Double) -> Unit
  arg(Self) -> Double
  conjugate(Self) -> Self
  conjugate_inplace(Self) -> Unit
  div(Self, Self) -> Unit
  div_imag(Self, Double) -> Self
  div_imag_inplace(Self, Double) -> Unit
  div_real(Self, Double) -> Self
  div_real_inplace(Self, Double) -> Unit
  mul(Self, Self) -> Unit
  mul_imag(Self, Double) -> Self
  mul_imag_inplace(Self, Double) -> Unit
  mul_real(Self, Double) -> Self
  mul_real_inplace(Self, Double) -> Unit
  native_pack(Double, Double, Array[Double], Int) -> Unit
  neg(Self) -> Unit
  new(Double, Double) -> Self
  op_add(Self, Self) -> Self
  op_div(Self, Self) -> Self
  op_mul(Self, Self) -> Self
  op_neg(Self) -> Self
  op_sub(Self, Self) -> Self
  pack(Self, Array[Double], Int) -> Unit
  polar(Double, Double) -> Self
  set(Self, Double, Double) -> Unit
  set_im(Self, Double) -> Unit
  set_re(Self, Double) -> Unit
  sqrt(Self) -> Self
  sub(Self, Self) -> Unit
  sub_imag(Self, Double) -> Self
  sub_imag_inplace(Self, Double) -> Unit
  sub_real(Self, Double) -> Self
  sub_real_inplace(Self, Double) -> Unit
}
impl Eq for Complex

// Type aliases

// Traits

